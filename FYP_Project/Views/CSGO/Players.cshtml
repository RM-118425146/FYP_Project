@{
    ViewData["Title"] = "Players";
    int i = 0;
    Random r = new Random();
    int year1 = r.Next(1, 15);
    int year2 = r.Next(1, 15);
    int year3 = r.Next(1, 15);
    int year4 = r.Next(1, 15);
    int year5 = r.Next(1, 15);
}
@model FYP_Project.ViewModels.TeamViewModel

<section id="team" class="team section-bg">
    <div class="container">

        <div class="section-title" data-aos="fade-up">
            <h2>@Model.EditableTeam.TeamName</h2>
            <p>Magnam dolores commodi suscipit. Necessitatibus eius consequatur ex aliquid fuga eum quidem. Sit sint consectetur velit. Quisquam quos quisquam cupiditate. Et nemo qui impedit suscipit alias ea. Quia fugiat sit in iste officiis commodi quidem hic quas.</p>
        </div>

        <div class="row">
            @foreach (var player in Model.Players)
            {
                if (player.TeamID == Model.EditableTeam.TeamID)
                {
                    <div class="col-lg-3 col-md-6 d-flex align-items-stretch">
                        <div class="member" data-aos="fade-up">
                            <div class="member-img">
                                <img src="~/img/csgo_logo.png" class="img-fluid" alt="">
                            </div>
                            <div class="member-info">
                                <h4>@player.GamerTag</h4>
                                <span>@player.PlayerFirstName @player.PlayerLastName</span>
                            </div>
                        </div>
                    </div>
                }
            }


        </div>

    </div>
</section><!-- End Our Team Section -->

<section id="previousResults" class="team section-bg">
    <div class="section-title" data-aos="fade-up">
        <h2>Previous Season Results</h2>
    </div>
    <div class="container" data-aos="fade-up">
        @Html.Hidden("year1", year1)
        @Html.Hidden("year2", year2)
        @Html.Hidden("year3", year3)
        @Html.Hidden("year4", year4)
        @Html.Hidden("year5", year5)
        <canvas id="SeasonResults" style="width:100%;height:200%;"></canvas>
    </div>

    <!-- chart.js script -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let year1 = document.getElementById("year1").value;
        let year2 = document.getElementById("year2").value;
        let year3 = document.getElementById("year3").value;
        let year4 = document.getElementById("year4").value;
        let year5 = document.getElementById("year5").value;
        const labels = ['2019 Spring', '2019 Winter', '2020 Spring', '2020 Winter', '2021 Spring'];
        const data = {
            labels: labels,
            datasets: [{
                label: 'Previous Season Results',
                data: [year1, year2, year3, year4, year5],
                fill: false,
                borderColor: 'rgb(75, 192, 192)',
                tension: 0.1
            }]
        };
        const config = {
            type: 'line',
            data: data,
        };
        const SeasonResults = new Chart(
            document.getElementById('SeasonResults'),
            config
        );
    </script>
</section>

<section id="team" class="team section-bg">
    <div class="container">

        @foreach (var player in Model.Players)
        {
            if (player.TeamID == Model.EditableTeam.TeamID && player.TwitchName != null && i == 0)
            {
                <br />
                <div class="section-title" data-aos="fade-up">
                    <h2>Watch @Model.EditableTeam.TeamName Live</h2>
                </div>
                <!--Twitch embed scource:https://dev.twitch.tv/docs/embed/everything -->
                <br />
                <div class="section-title" data-aos="fade-up">
                    <h4>@player.TwitchName</h4>
                </div>
                <div id="@player.TwitchName" style="padding:15px"></div>

                <script src="https://embed.twitch.tv/embed/v1.js"></script>

                <script type="text/javascript">
            new Twitch.Embed("@player.TwitchName", {
                width: "100%",
                height: 400,
                channel: "@player.TwitchName",
                allowfullscreen: true,
            });
                </script>
                i++;
            }
            else if (player.TeamID == Model.EditableTeam.TeamID && player.TwitchName != null)
            {
                <!--Twitch embed scource:https://dev.twitch.tv/docs/embed/everything -->
                <br />
                <div class="section-title" data-aos="fade-up">
                    <h4>@player.TwitchName</h4>
                </div>
                <div id="@player.TwitchName" style="padding:15px"></div>

                <script src="https://embed.twitch.tv/embed/v1.js"></script>

                <script type="text/javascript">
            new Twitch.Embed("@player.TwitchName", {
                width: "100%",
                height: 400,
                channel: "@player.TwitchName",
                allowfullscreen: true,
            });
                </script>
            }
        }

    </div>
</section>